// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<NewRecipe /> Testing structure of the NewRecipe component 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <NewRecipe />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": null,
    "nodeType": "host",
    "props": Object {
      "children": <form
        method="get"
        onSubmit={[Function]}
      >
        <label>
          Title
        </label>
        <input
          name="title"
          onChange={[Function]}
          placeholder="enter title"
          type="text"
          value=""
        />
        <label>
          Description
        </label>
        <input
          name="desc"
          onChange={[Function]}
          placeholder="enter description"
          type="text"
          value=""
        />
        <label>
          Ingredients
        </label>
        <textarea
          name="ingredients"
          onChange={[Function]}
          placeholder="enter ingredients (separating with new line)"
          type="text"
          value=""
        />
        <label>
          Procedure
        </label>
        <textarea
          name="procedure"
          onChange={[Function]}
          placeholder="enter procedure (separating with new line)"
          type="text"
          value=""
        />
        <AvatarCreator
          setAvatarURL={[Function]}
        />
        <p>
          
        </p>
        <div>
          <button
            type="submit"
          >
            Submit
          </button>
          <button
            onClick={[Function]}
          >
            Cancel
          </button>
        </div>
      </form>,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": null,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <label>
            Title
          </label>,
          <input
            name="title"
            onChange={[Function]}
            placeholder="enter title"
            type="text"
            value=""
          />,
          <label>
            Description
          </label>,
          <input
            name="desc"
            onChange={[Function]}
            placeholder="enter description"
            type="text"
            value=""
          />,
          <label>
            Ingredients
          </label>,
          <textarea
            name="ingredients"
            onChange={[Function]}
            placeholder="enter ingredients (separating with new line)"
            type="text"
            value=""
          />,
          <label>
            Procedure
          </label>,
          <textarea
            name="procedure"
            onChange={[Function]}
            placeholder="enter procedure (separating with new line)"
            type="text"
            value=""
          />,
          <AvatarCreator
            setAvatarURL={[Function]}
          />,
          <p>
            
          </p>,
          <div>
            <button
              type="submit"
            >
              Submit
            </button>
            <button
              onClick={[Function]}
            >
              Cancel
            </button>
          </div>,
        ],
        "method": "get",
        "onSubmit": [Function],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": null,
          "nodeType": "host",
          "props": Object {
            "children": "Title",
          },
          "ref": null,
          "rendered": "Title",
          "type": "label",
        },
        Object {
          "instance": null,
          "key": null,
          "nodeType": "host",
          "props": Object {
            "name": "title",
            "onChange": [Function],
            "placeholder": "enter title",
            "type": "text",
            "value": "",
          },
          "ref": null,
          "rendered": null,
          "type": "input",
        },
        Object {
          "instance": null,
          "key": null,
          "nodeType": "host",
          "props": Object {
            "children": "Description",
          },
          "ref": null,
          "rendered": "Description",
          "type": "label",
        },
        Object {
          "instance": null,
          "key": null,
          "nodeType": "host",
          "props": Object {
            "name": "desc",
            "onChange": [Function],
            "placeholder": "enter description",
            "type": "text",
            "value": "",
          },
          "ref": null,
          "rendered": null,
          "type": "input",
        },
        Object {
          "instance": null,
          "key": null,
          "nodeType": "host",
          "props": Object {
            "children": "Ingredients",
          },
          "ref": null,
          "rendered": "Ingredients",
          "type": "label",
        },
        Object {
          "instance": null,
          "key": null,
          "nodeType": "host",
          "props": Object {
            "name": "ingredients",
            "onChange": [Function],
            "placeholder": "enter ingredients (separating with new line)",
            "type": "text",
            "value": "",
          },
          "ref": null,
          "rendered": null,
          "type": "textarea",
        },
        Object {
          "instance": null,
          "key": null,
          "nodeType": "host",
          "props": Object {
            "children": "Procedure",
          },
          "ref": null,
          "rendered": "Procedure",
          "type": "label",
        },
        Object {
          "instance": null,
          "key": null,
          "nodeType": "host",
          "props": Object {
            "name": "procedure",
            "onChange": [Function],
            "placeholder": "enter procedure (separating with new line)",
            "type": "text",
            "value": "",
          },
          "ref": null,
          "rendered": null,
          "type": "textarea",
        },
        Object {
          "instance": null,
          "key": null,
          "nodeType": "class",
          "props": Object {
            "setAvatarURL": [Function],
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": null,
          "nodeType": "host",
          "props": Object {
            "children": "",
          },
          "ref": null,
          "rendered": "",
          "type": "p",
        },
        Object {
          "instance": null,
          "key": null,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <button
                type="submit"
              >
                Submit
              </button>,
              <button
                onClick={[Function]}
              >
                Cancel
              </button>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": null,
              "nodeType": "host",
              "props": Object {
                "children": "Submit",
                "type": "submit",
              },
              "ref": null,
              "rendered": "Submit",
              "type": "button",
            },
            Object {
              "instance": null,
              "key": null,
              "nodeType": "host",
              "props": Object {
                "children": "Cancel",
                "onClick": [Function],
              },
              "ref": null,
              "rendered": "Cancel",
              "type": "button",
            },
          ],
          "type": "div",
        },
      ],
      "type": "form",
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": null,
      "nodeType": "host",
      "props": Object {
        "children": <form
          method="get"
          onSubmit={[Function]}
        >
          <label>
            Title
          </label>
          <input
            name="title"
            onChange={[Function]}
            placeholder="enter title"
            type="text"
            value=""
          />
          <label>
            Description
          </label>
          <input
            name="desc"
            onChange={[Function]}
            placeholder="enter description"
            type="text"
            value=""
          />
          <label>
            Ingredients
          </label>
          <textarea
            name="ingredients"
            onChange={[Function]}
            placeholder="enter ingredients (separating with new line)"
            type="text"
            value=""
          />
          <label>
            Procedure
          </label>
          <textarea
            name="procedure"
            onChange={[Function]}
            placeholder="enter procedure (separating with new line)"
            type="text"
            value=""
          />
          <AvatarCreator
            setAvatarURL={[Function]}
          />
          <p>
            
          </p>
          <div>
            <button
              type="submit"
            >
              Submit
            </button>
            <button
              onClick={[Function]}
            >
              Cancel
            </button>
          </div>
        </form>,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": null,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <label>
              Title
            </label>,
            <input
              name="title"
              onChange={[Function]}
              placeholder="enter title"
              type="text"
              value=""
            />,
            <label>
              Description
            </label>,
            <input
              name="desc"
              onChange={[Function]}
              placeholder="enter description"
              type="text"
              value=""
            />,
            <label>
              Ingredients
            </label>,
            <textarea
              name="ingredients"
              onChange={[Function]}
              placeholder="enter ingredients (separating with new line)"
              type="text"
              value=""
            />,
            <label>
              Procedure
            </label>,
            <textarea
              name="procedure"
              onChange={[Function]}
              placeholder="enter procedure (separating with new line)"
              type="text"
              value=""
            />,
            <AvatarCreator
              setAvatarURL={[Function]}
            />,
            <p>
              
            </p>,
            <div>
              <button
                type="submit"
              >
                Submit
              </button>
              <button
                onClick={[Function]}
              >
                Cancel
              </button>
            </div>,
          ],
          "method": "get",
          "onSubmit": [Function],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": null,
            "nodeType": "host",
            "props": Object {
              "children": "Title",
            },
            "ref": null,
            "rendered": "Title",
            "type": "label",
          },
          Object {
            "instance": null,
            "key": null,
            "nodeType": "host",
            "props": Object {
              "name": "title",
              "onChange": [Function],
              "placeholder": "enter title",
              "type": "text",
              "value": "",
            },
            "ref": null,
            "rendered": null,
            "type": "input",
          },
          Object {
            "instance": null,
            "key": null,
            "nodeType": "host",
            "props": Object {
              "children": "Description",
            },
            "ref": null,
            "rendered": "Description",
            "type": "label",
          },
          Object {
            "instance": null,
            "key": null,
            "nodeType": "host",
            "props": Object {
              "name": "desc",
              "onChange": [Function],
              "placeholder": "enter description",
              "type": "text",
              "value": "",
            },
            "ref": null,
            "rendered": null,
            "type": "input",
          },
          Object {
            "instance": null,
            "key": null,
            "nodeType": "host",
            "props": Object {
              "children": "Ingredients",
            },
            "ref": null,
            "rendered": "Ingredients",
            "type": "label",
          },
          Object {
            "instance": null,
            "key": null,
            "nodeType": "host",
            "props": Object {
              "name": "ingredients",
              "onChange": [Function],
              "placeholder": "enter ingredients (separating with new line)",
              "type": "text",
              "value": "",
            },
            "ref": null,
            "rendered": null,
            "type": "textarea",
          },
          Object {
            "instance": null,
            "key": null,
            "nodeType": "host",
            "props": Object {
              "children": "Procedure",
            },
            "ref": null,
            "rendered": "Procedure",
            "type": "label",
          },
          Object {
            "instance": null,
            "key": null,
            "nodeType": "host",
            "props": Object {
              "name": "procedure",
              "onChange": [Function],
              "placeholder": "enter procedure (separating with new line)",
              "type": "text",
              "value": "",
            },
            "ref": null,
            "rendered": null,
            "type": "textarea",
          },
          Object {
            "instance": null,
            "key": null,
            "nodeType": "class",
            "props": Object {
              "setAvatarURL": [Function],
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": null,
            "nodeType": "host",
            "props": Object {
              "children": "",
            },
            "ref": null,
            "rendered": "",
            "type": "p",
          },
          Object {
            "instance": null,
            "key": null,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <button
                  type="submit"
                >
                  Submit
                </button>,
                <button
                  onClick={[Function]}
                >
                  Cancel
                </button>,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": null,
                "nodeType": "host",
                "props": Object {
                  "children": "Submit",
                  "type": "submit",
                },
                "ref": null,
                "rendered": "Submit",
                "type": "button",
              },
              Object {
                "instance": null,
                "key": null,
                "nodeType": "host",
                "props": Object {
                  "children": "Cancel",
                  "onClick": [Function],
                },
                "ref": null,
                "rendered": "Cancel",
                "type": "button",
              },
            ],
            "type": "div",
          },
        ],
        "type": "form",
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactFifteenAdapter {
      "options": Object {
        "supportPrevContextArgumentOfComponentDidUpdate": true,
      },
    },
  },
}
`;
